<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>性能测试 on runshell</title>
    <link>https://runshell.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in 性能测试 on runshell</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 15 Jul 2019 14:30:00 +0800</lastBuildDate>
    <atom:link href="https://runshell.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Loadrunner12 使用基础教程</title>
      <link>https://runshell.github.io/post/%E5%9F%BA%E7%A1%80%E8%BF%90%E7%BB%B4/loadrunner12-%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 15 Jul 2019 14:30:00 +0800</pubDate>
      <guid>https://runshell.github.io/post/%E5%9F%BA%E7%A1%80%E8%BF%90%E7%BB%B4/loadrunner12-%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;h2 id=&#34;1-安装略&#34;&gt;1. 安装（略）&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;程序安装包&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;HP_LoadRunner_12.02_Community_Edition_T7177-15059.exe&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;语言包&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;HP_LoadRunner_12.02_Community_Edition_Language_Packs_T7177-15062.exe&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-使用简介&#34;&gt;2. 使用简介&lt;/h2&gt;&#xA;&lt;p&gt;​&#x9;安装完成后，桌面上新增3个图标，分别是&lt;code&gt;Virtual User Generator&lt;/code&gt;、 &lt;code&gt;Controller&lt;/code&gt; 、&lt;code&gt;Analysis&lt;/code&gt; 。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/loadrunner_img1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;21-录制脚本&#34;&gt;2.1 录制脚本&lt;/h3&gt;&#xA;&lt;p&gt;​&#x9;打开&lt;code&gt;Virtual User Generator&lt;/code&gt; ，使用组合键&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;N&lt;/code&gt;打开如下对话框，选择&lt;code&gt;单协议&lt;/code&gt;→&lt;code&gt;Web-HTTP/HTML&lt;/code&gt;，填写脚本名称和保存位置后，点击创建。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/new_script.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;创建后到达如下界面，可以发先操作分3类，分别为&lt;code&gt;vuser_init&lt;/code&gt;、&lt;code&gt;Action&lt;/code&gt;、&lt;code&gt;vuser_end&lt;/code&gt;。他们的区别在于&lt;code&gt;vuser_init&lt;/code&gt;只运行一次，在启动运行场景后最先运行；在&lt;code&gt;vuser_init&lt;/code&gt;部分运行完后，&lt;code&gt;Action&lt;/code&gt;根据运行场景的设置，多次并发运行；&lt;code&gt;Action&lt;/code&gt;运行结束后，运行场景结束前运行&lt;code&gt;vuser_end&lt;/code&gt;，也只运行一次。通常来说，&lt;code&gt;vuser_init&lt;/code&gt;录制登录操作，&lt;code&gt;Action&lt;/code&gt;部分录制需要测试并发的业务操作，&lt;code&gt;vuser_end&lt;/code&gt;部分录制最后登出注销之类的释放资源的操作。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/operate.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;​&#x9;录制vuser_init：选中vuser_init，按组合键&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;R&lt;/code&gt;打开如下对话框，配置好url等相关参数后点击开始录制。Loadrunner会自动打开您选择的浏览器并访问您指定的URL。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/vuser_init.png&#34; alt=&#34;1551752491440&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;【注】如果出现下图错误，请确认网络是否正常，网络正常即可忽略该错误。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/net_error.png&#34; alt=&#34;1551686888809&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;​&#x9;输入用户名密码进行正常登录，&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/login.png&#34; alt=&#34;1551752859139&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;​&#x9;登录完成后，将操作切换为Action，继续进行收件操作，如果还想测试其它事件场景，点击右侧加号，添加新的事件场景。需要测试的场景录制完成后，将操作切换至vuser_end，录制注销操作。录制完成后点击终止按钮结束录制。&lt;/p&gt;&#xA;&lt;h3 id=&#34;22-运行脚本&#34;&gt;2.2 运行脚本&lt;/h3&gt;&#xA;&lt;p&gt;​&#x9;录制完成后打开&lt;code&gt;Controller&lt;/code&gt;，选中刚才录制的脚本，点击添加，然后点击&lt;code&gt;确定&lt;/code&gt;按钮，进入场景配置界面。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/run_script.png&#34; alt=&#34;1551756887458&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;221-场景配置&#34;&gt;2.2.1 场景配置&lt;/h4&gt;&#xA;&lt;p&gt;​&#x9;加载生成器，由于&lt;code&gt;Virtual User Generator&lt;/code&gt;与&lt;code&gt;Controller&lt;/code&gt;在同一计算机，所以添加一个localhost的生成器，确定即可。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/load_generator.png&#34; alt=&#34;1551757110771&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;​&#x9;配置全局计划，配置初始化方式、启动的vuser个数以及启动的时间、测试持续时间等。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/global.png&#34; alt=&#34;1551757309957&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;222-监视服务器资源&#34;&gt;2.2.2 监视服务器资源&lt;/h4&gt;&#xA;&lt;p&gt;​&#x9;点击底部的&lt;code&gt;运行&lt;/code&gt;标签，切换至如下界面，根据服务器操作系统类型，选择&lt;code&gt;Windows资源&lt;/code&gt;或&lt;code&gt;UNIX资源&lt;/code&gt;，右击最右下角的统计图，在右击菜单中选择&lt;code&gt;添加度量&lt;/code&gt;，到达服务器信息配置界面。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/monitor.png&#34; alt=&#34;1551757770639&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;2221-linux&#34;&gt;2.2.2.1 Linux&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;在Linux服务器上安装并启动rstatd&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install rstatd#安装rstatd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service rpcbind start &lt;span style=&#34;color:#75715e&#34;&gt;#启动rpc服务&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rpc.rstatd&#x9;&#x9;&#x9;  &lt;span style=&#34;color:#75715e&#34;&gt;#启动rpc.rstatd服务&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rpcinfo -p&#x9;&#x9;&#x9;  &lt;span style=&#34;color:#75715e&#34;&gt;#查看服务状态和端口&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/rstatd_status.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;在Controller中添加资源视图，添加时，注意带上rstatd服务所监听的端口。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://runshell.github.io/images/Linux.png&#34; alt=&#34;1551773072125&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
